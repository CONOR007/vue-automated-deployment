# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # 开启gzip
    gzip on;
    # 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩
    gzip_min_length 1k;
    # gzip 压缩级别 1-10 
    gzip_comp_level 2;
    # 进行压缩的文件类型。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    # etag协商缓存 默认是开启的
    etag on;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  47.242.36.24;
        root         /home/www;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~* \.(html)$ {
            # 关闭访问日志
            access_log off;
            # 添加响应头,no-cache:协商缓存,no-store:不缓存
            add_header  Cache-Control  max-age=no-cache;
        }
            
            # 特定文件设置强缓存
        location ~* \.(css|js|png|jpg|jpeg|gif|gz|svg|mp4|ogg|ogv|webm|htc|xml|woff)$ {
            access_log off;
            add_header    Cache-Control  max-age=360000;
        }

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        return 301 https://liucong.icu$request_uri;
    }

# Settings for a TLS enabled server.

   server {
       listen       443 ssl http2 default_server;
       listen       [::]:443 ssl http2 default_server;
       server_name  www.liucong.icu liucong.icu;
       root         /home/www;

       ssl_certificate "/etc/pki/Nginx/1_liucong.icu_bundle.crt";
       ssl_certificate_key "/etc/pki/Nginx/2_liucong.icu.key";
       ssl_session_cache shared:SSL:1m;
       ssl_session_timeout  10m;
       ssl_ciphers PROFILE=SYSTEM;
       ssl_prefer_server_ciphers on;

       # Load configuration files for the default server block.
       include /etc/nginx/default.d/*.conf;

        location ~* \.(html)$ {
            # 关闭访问日志
            access_log off;
            # 添加响应头,no-cache:协商缓存,no-store:不缓存
            add_header  Cache-Control  max-age=no-cache;
        }
            
            # 特定文件设置强缓存
        location ~* \.(css|js|png|jpg|jpeg|gif|gz|svg|mp4|ogg|ogv|webm|htc|xml|woff)$ {
            access_log off;
            add_header    Cache-Control  max-age=360000;
        }

        # 反向代理配置
        # location /api/ {
        #     add_header Access-Control-Allow-Credentials true;
        #     add_header Access-Control-Allow-Origin $http_origin;
        #     add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        #     add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, X-Requested-With';
        #     add_header Access-Control-Max-Age 86400;
        #     proxy_pass http://realworld.api.fed.lagounews.com/api/;
        # }

        # location / {
        #     proxy_pass http://127.0.0.1:3000;
        # }

       error_page 404 /404.html;
           location = /40x.html {
       }

       error_page 500 502 503 504 /50x.html;
           location = /50x.html {
       }
   }

}

